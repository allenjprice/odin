{:enums
 {;; accounts
  :role
  {:description "Account roles."
   :values      [:all :member :onboarding :applicant :admin]}

  ;; payments
  :payment_method
  {:description "Methods of payment."
   :values      [:ach :card :check :other]}

  :payment_source_type
  {:description "Types of payment source."
   :values      [:bank :card]}

  :payment_status
  {:description "Payment status."
   :values      [:due :canceled :paid :pending :failed :refunded]}}

 :interfaces
 {:person
  {:fields {:first_name {:type (non-null String)}
            :last_name  {:type (non-null String)}
            :email      {:type (non-null String)}}}}

 :objects
 {:account
  {:implements [:person]
   :fields     {:id         {:type    (non-null :Long)
                             :resolve (:get :db/id)}
                :name       {:type    (non-null String)
                             :resolve :person/full-name}
                :first_name {:type    (non-null String)
                             :resolve (:get :person/first-name)}
                :last_name  {:type    (non-null String)
                             :resolve (:get :person/last-name)}
                :email      {:type    (non-null String)
                             :resolve (:get :account/email)}
                :phone      {:type    String
                             :resolve (:get :account/phone-number)}
                :role       {:type    (non-null :Keyword)
                             :resolve (:get :account/role)}
                :property   {:type    :property
                             :resolve :account/property}}}


  :payment
  {:fields {:id      {:type    (non-null :Long)
                      :resolve (:get :db/id)}
            :uuid    {:type    (non-null String)
                      :resolve (:get :payment/id)}
            :ext_id  {:type        String
                      :description "The Stripe external id."
                      :resolve     :payment/external-id}
            :method  {:type    :payment_method
                      :resolve :payment/method}
            :for     {:type    :Keyword
                      :resolve :payment/for}
            :autopay {:type        Boolean
                      :description "Is this an autopay payment?"
                      :resolve     :payment/autopay?}
            :amount  {:type    (non-null Float)
                      :resolve (:get :payment/amount)}
            :status  {:type    :payment_status
                      :resolve :payment/status}
            :due     {:type    :Instant
                      :resolve (:get :payment/due)}
            :pstart  {:type        :Instant
                      :description "Period start."
                      :resolve     (:get :payment/pstart)}
            :pend    {:type        :Instant
                      :description "Period end."
                      :resolve     (:get :payment/pend)}
            :account {:type    (non-null :account)
                      :resolve (:get :payment/account)}
            :source  {:type    :payment_source
                      :resolve :payment/source}}}


  :payment_source
  {:fields {:id       {:type    (non-null String)
                       :resolve (:get :id)}
            :last4    {:type    (non-null String)
                       :resolve (:get :last4)}
            :customer {:type    String
                       :resolve (:get :customer)}
            :status   {:type    (non-null String)
                       :resolve (:get :status)}
            :type     {:type    (non-null :payment_source_type)
                       :resolve :payment.source/type}
            :name     {:type    (non-null String)
                       :resolve :payment.source/name}
            :payments {:type        (list :payment)
                       :description "Payments associated with this source."
                       :resolve     :payment.source/payments}}}

  :property
  {:fields {:id   {:type    (non-null :Long)
                   :resolve (:get :db/id)}
            :name {:type    (non-null String)
                   :resolve (:get :property/name)}
            :code {:type    (non-null String)
                   :resolve (:get :property/internal-name)}}}}

 :queries
 {:accounts {:type    (list :account)
             :args    {:role {:type          :role
                              :default-value :all}}
             :resolve :account/list}

  :account {:type    :account
            :args    {:id {:type (non-null :Long)}}
            :resolve :account/entry}

  :payments {:type    (list :payment)
             :args    {:account {:type        (non-null :Long)
                                 :description "ID of an account to request payments for."}}
             :resolve :payment/list}

  :payment_sources {:type    (list :payment_source)
                    :args    {:account {:type        (non-null :Long)
                                        :description "ID of an account to request sources for."}}
                    :resolve :payment.sources/list}}

 :mutations
 {:set_phone {:type        :account
              :description "Set an account's phone number. This is a demo mutation."
              :args        {:id    {:type        (non-null :Long)
                                    :description "This account's id."}
                            :phone {:type        (non-null String)
                                    :description "The phone number that is being set."}}
              :resolve     :account/set-phone!}}}
